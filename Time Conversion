Given a time in -hour AM/PM format, convert it to military (24-hour) time.

Note: Midnight is 12:00:00AM on a 12-hour clock, and 00:00:00 on a 24-hour clock. Noon is 12:00:00PM on a 12-hour clock, and 12:00:00 on a 24-hour clock.

Function Description

Complete the timeConversion function in the editor below. It should return a new string representing the input time in 24 hour format.

timeConversion has the following parameter(s):

s: a string representing time in  hour format
Input Format

A single string  containing a time in -hour clock format (i.e.:  or ), where  and .

Constraints

All input times are valid
Output Format

Convert and print the given time in -hour format, where .

Sample Input 0

07:05:45PM
Sample Output 0

19:05:45

-------------------------------------------------------------
Code
-------------------------------------------------------------

import java.io.*;
import java.math.*;
import java.text.*;
import java.util.*;
import java.util.regex.*;

public class Solution 
{

    /*
     * Complete the timeConversion function below.
     */
    static String timeConversion(String s) 
    {
        char[] ch=s.toCharArray(); 
        int n = ch.length-1; 
        //System.out.println(ch[n-2]);
        
        if(ch[n-1]=='A')
        {
            if(ch[0]=='1' && ch[1]=='2'){ch[0]=ch[1]=0;}
        }
        else if(ch[n-1]=='P')
        {
            if(ch[0]!='1' && ch[1]!='2'){ch[0]+=1;ch[1]+=2;}
            //System.out.println(n);
        }
        char[] ch1= new  char[n-1];
        //char[] array=new  char[ini.length()];
        for (int i=0;i<=n-2;i++)
        {
            ch1[i] = ch[i];
        }
        String ss = new String(ch1);
        return ss;
    }
    

    private static final Scanner scan = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bw = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String s = scan.nextLine();

        String result = timeConversion(s);

        bw.write(result);
        bw.newLine();

        bw.close();
    }
}
